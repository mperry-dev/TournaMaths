#!/bin/bash

############################## Terraform ##############################
# List all Terraform files that have been changed in the current commit
changed_tf_files=$(git diff --cached --name-only -- '*.tf')
terraform_fmt_exit=0 # Initial value unless updated below is that no files to change

# Run terraform fmt on the changed Terraform files, if any
if [ -n "$changed_tf_files" ]; then
  # Gives error code if found linting issue, without making changes
  terraform fmt -check -list=false $changed_tf_files
  terraform_fmt_exit=$?
  if [ $terraform_fmt_exit -ne 0 ]; then
    echo "Doing Terraform linting."
    # Actually make the changes now, and list changed files
    terraform fmt $changed_tf_files
  else
    echo "No Terraform files changed."
  fi
else
  echo "No Terraform files changed."
fi

############################## Java ##############################
# List all Java files that have been changed in the current commit
changed_java_files=$(git diff --cached --name-only -- '*.java')

# Run google-java-format on the changed Java files, if any
if [ -n "$changed_java_files" ]; then
  echo "Doing Java linting."
  for file in $changed_java_files; do
    echo "$file"  # List the file
    google-java-format -i "$file"
  done
  google_java_format_exit=1
else
  echo "No Java files changed."
  google_java_format_exit=0
fi

############################## Set the exit code of this script (to determine whether commit goes through)  ##############################

# Exit with an error code if either of the commands failed, so commit is rejected
if [ $terraform_fmt_exit -ne 0 ] || [ $google_java_format_exit -ne 0 ]; then
  exit 1
fi

# Continue with the commit if both commands succeeded
exit 0
